// Хук ⁡⁢⁣⁣useRef⁡ в React ⁡⁣⁣⁢предоставляет ссылку на DOM-элемент⁡ или другой реактивный объект и ⁡⁢⁣⁣сохраняет его между рендерами компонента⁡.
//  Он часто используется для доступа к ⁡⁣⁢⁣DOM-элементам⁡, ⁡⁣⁢⁣управления фокусом⁡, ⁡⁣⁢⁣анимациям⁡ и другим манипуляциям с элементами, 
// которые могут потребовать сохранения ссылки на элемент между рендерами.
import { useEffect, useRef } from 'react';

export const MyUseRef = () => {

  // ​‌‍‌⁡⁢⁢⁡⁣⁣⁢Ниже описанны шаги работы useRef⁡⁡ и порядок верный , не ошибка​ /

  // ⁡⁣⁢⁣1.)⁡ ⁡⁣⁣⁢Создание ссылки⁡: ⁡⁢⁣⁣useRef⁡ создает объект, который содержит свойство ⁡⁢⁣⁣current⁡. Это свойство может быть произвольным, 
  // и вы можете его использовать для хранения ссылки на элемент или другой объект.
  const inputRef = useRef<HTMLInputElement | null>(null);;

  useEffect(() => {

    // ⁡⁣⁢⁣3⁡⁣⁢⁣.)⁡⁡⁣⁣⁢ Доступ к текущему значению⁡⁡: Чтобы получить доступ к текущему значению ⁡⁢⁣⁣useRef⁡, вы используете свойство ⁡⁢⁣⁣current⁡.
    console.log(inputRef.current)


    // В этом ⁡⁣⁣⁢примере⁡ при монтировании компонента ⁡⁢⁣⁣useEffect⁡ устанавливает ⁡⁣⁣⁢фокус⁡ на input элементе с использованием ⁡⁣⁢⁣inputRef.current.⁡⁢⁣⁣focus()⁡⁡.
    inputRef.current?.focus()
  },[])
  return <>

  {/* ⁡⁡⁣⁢⁣2.)⁡⁡ ⁡⁣⁣⁢Привязка к DOM-элементу⁡: Чтобы ⁡⁣⁣⁢привязать⁡ ⁡⁢⁣⁣useRef⁡ к DOM-элементу, вы можете использовать его как атрибут ⁡⁢⁣⁣ref⁡ при создании элемента в JSX. */}
  <input type="text"  ref={inputRef}/>
  </>
}