// ⁡⁢⁣⁣<BrowserRouter>⁡ и ⁡⁢⁣⁣<HashRouter>⁡ - это два основных компонента для ⁡⁣⁣⁢настройки маршрутизации⁡ в React Router ⁡⁣⁢⁣версии 6⁡. 
export {}

// ⁡⁢⁣⁣<BrowserRouter>⁡:
// ⁡⁣⁢⁣Когда использовать⁡: Выбирайте ⁡⁢⁣⁣<BrowserRouter>⁡, если ваше приложение находится в среде, 
// где вы имеете ⁡⁣⁣⁢полный контроль над настройкой сервера⁡ и хотите иметь чистые и профессионально выглядящие URL-адреса ⁡⁢⁣⁢без символа⁡ ⁡⁢⁣⁣#⁡.
// Также это предпочтительный выбор, если вы разрабатываете SPA (Single Page Application), 
// где маршруты управляются ⁡⁣⁣⁢на клиентской стороне⁡ без перезагрузки страницы.

// ⁡⁣⁢⁣Что это:⁡ ⁡⁢⁣⁣<BrowserRouter>⁡ использует ⁡⁣⁣⁢HTML5 History API⁡ для управления URL и состоянием маршрута. 
// Он позволяет создавать URL-адреса вида /about, /contact, и так далее, ⁡⁢⁣⁢без символа⁡ ⁡⁢⁣⁣#⁡.
// Это ⁡⁢⁣⁣роутер⁡ ⁡⁣⁣⁢по умолчанию⁡, который вы должны использовать, если вы работаете над ⁡⁣⁣⁢веб-приложением⁡, и это роутер, 
// который вы будете использовать в ⁡⁣⁢⁣99%⁡ всех своих приложений, поскольку он охватывает все обычные варианты использования маршрутизации. 
// Другие роутеры, о которых поговорим далее, имеют очень специфические варианты использования.

// Пропсы BrowserRouter: 

// ⁡⁢⁣⁣NativeRouter⁡
// NativeRouter по сути является ⁡⁣⁣⁢эквивалентом⁡ BrowserRouter, но для ⁡⁢⁣⁣React Native⁡. 
// Если вы используете React Native, то это роутер, который вы захотите использовать.

// ⁡⁢⁣⁣HashRouter⁡
// Этот роутер работает очень похоже на BrowserRouter, но основное отличие заключается в том, что вместо того, 
// чтобы изменять URL-адрес на что-то вроде http://localhost:3000/books ⁡⁣⁣⁢он будет хранить URL-адрес в ⁡⁢⁣⁣хэше⁡⁡, 
// как http://localhost:3000/#/books. Как видите, этот URL-адрес имеет ⁡⁢⁣⁣#⁡ после URL-адреса, который представляет собой хэш-часть URL-адреса. 
// Все, что находится в хэш-части URL-адреса, является просто дополнительной информацией, 
// которая обычно обозначает идентификатор на странице для целей прокрутки, поскольку страница будет автоматически прокручиваться до 
// элемента с идентификатором, представленным хешем, при загрузке страницы.

// ⁡⁢⁣⁣HistoryRouter 
// HistoryRouter (в настоящее время называется unstable_HistoryRouter) — это роутер, который позволяет ⁡⁣⁣⁢вручную управлять объектом истории⁡, 
// который React Router использует для хранения всей информации, связанной с ⁡⁣⁣⁢историей маршрутизации вашего приложения⁡. 
// Этот объект истории помогает убедиться, что такие вещи, как кнопки «⁡⁣⁢⁣Назад⁡» и «⁡⁣⁢⁣Вперед⁡» ⁡⁣⁣⁢в браузере⁡, работают правильно.⁡

// ⁡⁢⁣⁣MemoryRouter⁡
// MemoryRouter немного отличается от остальных роутеров, о которых мы говорили, поскольку вместо того, чтобы хранить информацию 
// о текущем маршруте в URL-адресе браузера, этот роутер ⁡⁣⁣⁢хранит⁡ информацию о роуте непосредственно ⁡⁣⁣⁢в памяти⁡.
// Очевидно, что это очень неподходящий роутер для обычных операций маршрутизации, 
// но этот роутер невероятно полезен, когда вы пишете ⁡⁢⁣⁣тесты для своего приложения⁡, у которого ⁡⁢⁣⁢нет доступа⁡ к браузеру.