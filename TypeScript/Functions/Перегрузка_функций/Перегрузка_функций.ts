// TypeScript поддерживает возможность ⁡⁢⁣⁣перегрузки функций⁡, то есть мы можем определить ⁡⁣⁣⁢несколько версий функции⁡, которые будут иметь ⁡⁣⁣⁢одно и то же ⁡⁢⁣⁣имя⁡⁡, 
// ⁡⁣⁣⁢но разные типы⁡ параметров или ⁡⁣⁣⁢разное количество⁡ параметров. Для перегрузки вначале опеределяем ⁡⁣⁣⁢все версии функции⁡, которые не будут иметь никакой логики. 
// ⁡⁢⁣⁣А потом определяем версию функции с общей сигнатурой⁡, которая ⁡⁣⁣⁢подходит под все⁡ ранее определенные варианты. И в этой ⁡⁢⁣⁣общей версии⁡ уже определяем конкретную логику функции.

function add(x: string, y: string): string
function add(x: number, y: number): number

// ⁡⁢⁣⁣Общая версия⁡ с конкретной логикой
function add(x: any, y: any): any {
    return x + y
}

let result1 = add(5, 4)
console.log(result1)   // 9

let result2 = add("5", "4")
console.log(result2)   // 54

// Но если бы мы ту же функцию применили бы к boolean: ⁡⁣⁢⁣console⁡⁣⁢⁣.⁡⁡⁣⁢⁡⁣⁣⁢log⁡⁣⁢⁡⁣⁢⁣(⁡⁡⁡⁢⁣⁣add⁡⁣⁢⁡⁣⁢⁣(⁡⁡⁡⁢⁢⁡⁢⁣⁢true⁡⁢⁢⁢,⁡ ⁡⁢⁣⁢false⁡⁡⁡⁣⁢⁡⁣⁢⁣))⁡⁡  // Мы получим ⁡⁢⁣⁢ошибку⁡ .
