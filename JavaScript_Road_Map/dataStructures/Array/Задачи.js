// ‚Å°‚Å£‚Å£‚Å¢–ó–∞–¥–∞—á–∞ N1‚Å° . // –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —Å–ª–µ–¥—É—é—â–∏–π –∫–æ–¥?
let fruits = ["–Ø–±–ª–æ–∫–æ", "–ê–Ω–∞–Ω–∞—Å ", "–í–∏—à–Ω—è"]
let cart = fruits;
cart.push('–ë–∞–Ω–∞–Ω');
console.log('–ó–∞–¥–∞—á–∞ 1', fruits) // –≤—ã–≤–µ–¥–µ—Ç fruits –≤–º–µ—Å—Ç–µ —Å ‚Å°‚Å¢‚Å£‚Å£"–ë–∞–Ω–∞–Ω"‚Å°-–ü–æ—Ç–æ–º—É, —á—Ç–æ –º–∞—Å—Å–∏–≤—ã ‚Äì —ç—Ç–æ –æ–±—ä–µ–∫—Ç—ã. –û–±–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Åart –∏ fruits —è–≤–ª—è—é—Ç—Å—è —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –º–∞—Å—Å–∏–≤.

// ‚Å°‚Å£‚Å£‚Å¢–ó–∞–¥–∞—á–∞ N2‚Å°‚Å° . // 
// –°–æ–∑–¥–∞–π—Ç–µ –º–∞—Å—Å–∏–≤ styles —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ ¬´–î–∂–∞–∑¬ª –∏ ¬´–ë–ª—é–∑¬ª.
let styles = ['Jaz', 'Bluz'];
// –î–æ–±–∞–≤—å—Ç–µ ¬´–†–æ–∫-–Ω-—Ä–æ–ª–ª¬ª –≤ –∫–æ–Ω–µ—Ü.
styles.push('Rok');
// –ó–∞–º–µ–Ω–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ —Å–µ—Ä–µ–¥–∏–Ω–µ –Ω–∞ ¬´–ö–ª–∞—Å—Å–∏–∫–∞¬ª. 
// –í–∞—à –∫–æ–¥ –¥–ª—è –ø–æ–∏—Å–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è –≤ —Å–µ—Ä–µ–¥–∏–Ω–µ –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –¥–ª—è –º–∞—Å—Å–∏–≤–æ–≤ —Å –ª—é–±–æ–π –¥–ª–∏–Ω–æ–π.
let fix = Math.floor(styles.length / 2)
styles[fix] = 'Classik';
console.log('–ó–∞–¥–∞—á–∞ 2' , styles)
// –£–¥–∞–ª–∏—Ç–µ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞ –∏ –ø–æ–∫–∞–∂–∏—Ç–µ –µ–≥–æ.
let first = styles.shift()
console.log(first)
// –í—Å—Ç–∞–≤—å—Ç–µ –†—ç–ø –∏ –†–µ–≥–≥–∏ –≤ –Ω–∞—á–∞–ª–æ –º–∞—Å—Å–∏–≤–∞.
styles.unshift('Pop','Reggi')
console.log(styles)

// ‚Å°‚Å£‚Å£‚Å¢–ó–∞–¥–∞—á–∞ ‚Ññ3‚Å°   /

let arrS = ['a' , 'b', 'c'];
arrS.push(function(){
    console.log('–ó–∞–¥–∞—á–∞ 3' , this)
})

arrS[3](); // ‚Äã‚Äå‚Äå‚Äç‚Äç‚Å°‚Å¢‚Å¢‚Å°‚Å£‚Å¢‚Å°‚Å£‚Å£‚Å¢–°–ø—Ä–æ—Å–∏—Ç—å –ü–æ—á–µ–º—É –∏–º–µ–Ω–Ω–æ ùüØ‚Å° ‚Äã‚Å°‚Å°. // —Ä–µ–∑—É–ª—å—Ç–∞—Ç  a,b,function(){...}

// ‚Å°‚Å£‚Å£‚Å¢–ó–∞–¥–∞—á–∞ ‚Ññ4‚Å° /
// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é sumInput(), –∫–æ—Ç–æ—Ä–∞—è:
// –ü—Ä–æ—Å–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–µ—Å—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏—è, –∏—Å–ø–æ–ª—å–∑—É—è prompt –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏—Ö –≤ –º–∞—Å—Å–∏–≤.
// –ó–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç –∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–¥—ë—Ç –Ω–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É –∏–ª–∏ –Ω–∞–∂–º—ë—Ç ¬´–û—Ç–º–µ–Ω–∞¬ª.
// –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—É–º–º—É —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞.
function sumInp(){
    let sumArr = [];
    let first = 0;
    for(i=0; isNaN(first) === false; i++) {
     first = prompt('Num', 0);
     if(first === null || first === '') break;
     sumArr.push(Number(first));
    }
    console.log('–ó–∞–¥–∞—á–∞ 4. –°—É–º–º–∞: ',sumArr.reduce((sum, current) => sum + current))
    console.log('–ó–∞–¥–∞—á–∞ 4. –ú–∞—Å—Å–∏–≤: ',sumArr)
}
// sumInp()

// ‚Å°‚Å£‚Å£‚Å¢–ó–∞–¥–∞—á–∞ ‚Ññ‚Å°‚Å£‚Å£‚Å¢5‚Å° /
let statArr = [1, -2, 3, 4, -9, 6]
let emptyArr = [-1,-2,-3]
function getMaxSubSum(a){
    let sum = 0
    for(let i = 0; i<a.length; i++){
        if(Number(a[i]) > 0){
            sum +=  Number(a[i]); 
        }

    }
    console.log('–ó–∞–¥–∞—á–∞ N5: ', sum)
}
getMaxSubSum(statArr)