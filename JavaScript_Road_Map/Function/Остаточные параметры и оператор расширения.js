// ⁡⁢⁣⁣Остаточные параметры⁡ могут быть обозначены через три точки ⁡⁢⁣⁣...⁡
// Буквально это значит: «собери оставшиеся параметры и ⁡⁣⁣⁢положи их в массив⁡».

// ​‌‍‌⁡⁣⁣⁢Например⁡​, соберём все аргументы в ⁡⁢⁣⁣массив args⁡:

function sumAll(...args) { // args — имя массива
    let sum = 0;
  
    for (let arg of args) sum += arg;
  
    return sum;
  }
  
  console.log( sumAll(1) ); // 1
  console.log( sumAll(1, 2) ); // 3
  console.log( sumAll(1, 2, 3) ); // 6


//   Мы можем положить первые несколько параметров ⁡⁢⁣⁣в переменные⁡, а остальные – ⁡⁢⁣⁣собрать в массив⁡.
//   В ​‌‍‌⁡⁣⁣⁢примере ниже ⁡​первые два аргумента функции станут именем и фамилией, 
//   а третий и последующие превратятся в ⁡⁢⁣⁣массив⁡ titles:

function showName(arg1, arg2, ...titles){ // ⁡⁣⁣⁡⁣⁢⁣...titles⁡⁡ ⁡⁢⁣⁣превратится в массив⁡ и мы можем его перебрать в ⁡⁢⁣⁣цикле⁡ /
//⁡⁢⁣⁣Остаточные параметры⁡ должны располагаться ⁡⁢⁣⁢в конце⁡, иначе будет ⁡⁢⁣⁢ошибка⁡ /
    console.log('arg1: ', arg1);
    console.log('arg2: ', arg2);

    for(let item of titles){ // ⁡⁢⁣⁣перебираем⁡ ⁡⁣⁣⁢остаточные параметры⁡ которые лежат в ⁡⁢⁣⁣массиве titles⁡ /
        console.log(item)
    }
}

showName("Юлий", "Цезарь", "Консул", "Император"); // ⁡⁣⁢⁣Консул⁡ и ⁡⁣⁢⁣Император⁡ будут перенесены в ⁡⁢⁣⁣массив titles⁡⁡ /


// Все аргументы функции находятся в ⁡⁢⁣⁣псевдомассиве⁡ ⁡⁢⁣​‌‍‌⁡⁢⁣⁣arguments⁡​⁡ под своими порядковыми номерами.
// ​‌‍‌⁡⁢⁣⁣arguments⁡​ похож на массив и его можно ⁡⁣⁣⁢перебрать в цикле⁡, но он ⁡⁢⁣⁢не поддерживает⁡ ⁡⁣⁣⁢методы масивов⁡ типа ⁡⁢⁣⁣.map()⁡ /

// ​‌‍‌⁡⁢⁣⁢Стрелочные функции не имеют "⁡⁢⁣⁣arguments⁡⁢⁣⁢"⁡⁡​ /

function showNameArguments() {
    console.log('aruments: ',arguments[0]) // Юлий
    for(item of arguments){
        console.log('arguments: ', item)
    }
}
showNameArguments("Юлий", "Цезарь", "Консул", "Император")

// ​‌‍‌⁡⁣⁣⁢Оператор расширения⁡​ ​‌‍‌⁡⁢⁣⁣...⁡​ , Это ⁡⁣⁣⁢второй вид⁡ использования оператора ⁡⁢⁣⁣...⁡ /

// Допустим, у нас есть ⁡⁣⁣⁢массив чисел⁡ [3, 5, 1]. Как вызвать для него ⁡⁢⁣⁣Math.max⁡?
// Просто так их ⁡⁢⁣⁢не вставишь⁡ —⁡⁢⁣⁣ Math.max⁡ ожидает получить список чисел, ⁡⁣⁣⁢а не один массив⁡.
let arr = [3, 5, 1];
console.log('Оператор расширения: ', Math.max(arr) ); // NaN

// И тут нам ​‌‍‌⁡⁣⁣⁢поможет оператор расширения⁡​. 
// Он похож на ⁡⁢⁣⁣остаточные параметры⁡ – тоже использует ⁡⁢⁣⁣...⁡, но делает совершенно ⁡⁣⁣⁢противоположное⁡.
// Он ⁡⁢⁣⁣извлекает⁡ элементы из массива.

let arr2 = [3, 5, 1];
console.log('Оператор расширения: ', Math.max(...arr2)) // 5 /⁡⁢⁣⁣ Math.max⁡ выводит ⁡⁣⁣⁢найбольшее⁡ число /

// ⁡⁢⁣⁣оператор расширения⁡ подойдёт для того, чтобы превратить ⁡⁢⁣⁣строку в массив⁡ символов:

let str = "Привет";
console.log( [...str] ); // П,р,и,в,е,т /
