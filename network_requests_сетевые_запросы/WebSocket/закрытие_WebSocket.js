// ⁡⁢⁣⁣Закрытие подключения⁡ в контексте веб-сокетов означает ⁡⁣⁣⁢завершение соединения между клиентом и сервером⁡. 

// Существует ⁡⁣⁣⁢два типа закрытия подключения⁡:
// ⁡⁢⁣⁣Активное закрытие⁡: В этом случае, клиент или сервер ⁡⁣⁣⁢отправляет сообщение⁡ другой стороне, чтобы указать, что они хотят закрыть соединение. 
// Другая сторона может ответить подтверждением, и затем соединение закрывается. 
// Этот способ позволяет сторонам завершить обмен данными перед фактическим закрытием.

// ⁡⁢⁣⁣Пассивное закрытие⁡: В этом случае, одна сторона просто ⁡⁣⁣⁢закрывает соединение без предупреждения⁡ другой стороны. 
// Это может произойти, например, при сбое соединения или потере связи. Другая сторона получит уведомление о закрытии веб-сокет соединения.

const socket = new WebSocket('wss://javascript.info/article/websocket/demo/hello')

socket.onclose = (e) => {
  console.log("Сервер закрылся:", e)
}

// Обычно, когда сторона хочет закрыть соединение (браузер и сервер ⁡⁢⁣⁣имеют равные права⁡), они отправляют «фрейм закрытия соединения» 
// с ⁡⁣⁣⁢кодом закрытия⁡ и ⁡⁣⁣⁢указывают причину в виде текста⁡.

// ⁡⁣⁣⁢Метод⁡ для этого: ⁡⁣⁢⁣socket.close(⁡⁢⁣⁣code⁡, ⁡⁢⁣⁣reason⁡⁣⁢⁣)⁡⁡; ⁡⁢⁣⁣code⁡ и ⁡⁢⁣⁣reason⁡ могут быть ⁡⁣⁣⁢массивами⁡ например: ⁡⁣⁣⁢[1001,1006]⁡⁢⁣⁣,⁡ ⁡⁣⁣⁢['Закрылся', 'Что то не нравится']⁡ .
// ⁡⁢⁣⁣code⁡ – специальный WebSocket-код закрытия (не обязателен).
// ⁡⁢⁣⁣reason⁡ – строка с описанием причины закрытия (не обязательна).

setTimeout(() => {
  socket.close([1000], 'Я закрыл сервер') 
},5000)

// Наиболее распространённые значения ⁡⁢⁣⁣code⁡:
// ⁡⁣⁢⁣1000⁡ – по умолчанию, нормальное закрытие,
// ⁡⁣⁢⁣1006⁡ – невозможно установить такой код вручную, указывает, что соединение было потеряно (нет фрейма закрытия).
// ⁡⁣⁢⁣1001⁡ – сторона отключилась, например сервер выключен или пользователь покинул страницу,
// ⁡⁣⁢⁣1009⁡ – сообщение слишком большое для обработки,
//⁡⁣⁢⁣ 1011⁡ – непредвиденная ошибка на сервере,
// …и так далее.